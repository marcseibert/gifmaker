{"ast":null,"code":"'use strict';\n\nvar SyncReader = module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n};\n\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length),\n    // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n};\n\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    var read = this._reads[0];\n\n    if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n\n      var buf = this._buffer;\n      this._buffer = buf.slice(read.length);\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n\n  if (this._reads.length > 0) {\n    return new Error('There are some read requests waitng on finished stream');\n  }\n\n  if (this._buffer.length > 0) {\n    return new Error('unrecognised content at end of stream');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}