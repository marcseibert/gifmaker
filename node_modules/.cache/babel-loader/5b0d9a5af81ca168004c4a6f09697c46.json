{"ast":null,"code":"var _jsxFileName = \"/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/src/components/Views.js\";\nimport React from 'react';\nimport { MenuBar } from './MenuBar';\nimport { Timeline } from './Timeline';\nimport { PreviewWindow } from './PreviewWindow';\nimport { ProjectExplorer } from './ProjectExplorer';\nimport Grommet, { Grid, Box, Button, Text, TextInput, Heading } from 'grommet';\nimport { Edit, Folder, Close } from 'grommet-icons';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport Action from '../store/actions';\nexport const MainView = props => {\n  return React.createElement(DndProvider, {\n    backend: HTML5Backend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    fill: \"vertical\",\n    background: \"dark-2\",\n    rows: [\"xxsmall\", \"flex\", \"medium\"],\n    columns: [\"60%\", \"flex\"],\n    areas: [{\n      name: \"MenuBar\",\n      start: [0, 0],\n      end: [1, 0]\n    }, {\n      name: \"Timeline\",\n      start: [0, 2],\n      end: [1, 2]\n    }, {\n      name: \"ProjectExplorer\",\n      start: [0, 1],\n      end: [0, 1]\n    }, {\n      name: \"PreviewWindow\",\n      start: [1, 1],\n      end: [1, 1]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Box, {\n    gridArea: \"MenuBar\",\n    background: \"dark-1\",\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(MenuBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Box, {\n    gridArea: \"Timeline\",\n    background: \"dark-2\",\n    direction: \"row\",\n    pad: {\n      horizonal: \"large\",\n      vertical: \"large\"\n    },\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Timeline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Box, {\n    gridArea: \"ProjectExplorer\",\n    border: {\n      color: 'black',\n      size: \"3px\"\n    },\n    round: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ProjectExplorer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Box, {\n    gridArea: \"PreviewWindow\",\n    border: {\n      color: 'black',\n      size: \"3px\"\n    },\n    round: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(PreviewWindow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n};\n\nconst FileDialogButtons = ({\n  targetEditPage,\n  onCreateProject,\n  onCloseProjectContext\n}) => {\n  var _projectName = \"\";\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Box, {\n    align: \"center\",\n    justify: \"center\",\n    fill: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" gifmaker \")), React.createElement(Box, {\n    direction: \"row-responsive\",\n    align: \"center\",\n    justify: \"center\",\n    pad: \"medium\",\n    gap: \"small\",\n    fill: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    placeholder: \"type project name here\",\n    onChange: event => _projectName = event.target.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    label: \"Create\",\n    onClick: () => {\n      onCreateProject(_projectName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(Button, {\n    icon: React.createElement(Close, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }),\n    onClick: () => onCloseProjectContext(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })));\n};\n\nconst ProjectDialogButtons = ({\n  onOpenProjectContext,\n  onCloseProjectContext\n}) => {\n  return React.createElement(Box, {\n    direction: \"row-responsive\",\n    align: \"center\",\n    justify: \"center\",\n    pad: \"medium\",\n    gap: \"small\",\n    fill: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \" gifmaker \"), React.createElement(Button, {\n    icon: React.createElement(Edit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }),\n    label: \"New Project..\",\n    onClick: () => onOpenProjectContext(\"new\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Button, {\n    icon: React.createElement(Folder, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }),\n    label: \"Open..\",\n    onClick: () => onOpenProjectContext(\"new\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n};\n\nconst StartViewComponent = ({\n  targetEditPage,\n  inFileDialog = false,\n  onOpenProjectContext,\n  onCloseProjectContext,\n  onCreateProject\n}) => {\n  return React.createElement(Box, {\n    gap: \"medium\",\n    align: \"center\",\n    justify: \"center\",\n    fill: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Box, {\n    justify: \"center\",\n    background: \"dark-1\",\n    round: true,\n    width: \"xlarge\",\n    pad: \"large\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, inFileDialog ? React.createElement(FileDialogButtons, {\n    targetEditPage: targetEditPage,\n    onCreateProject: onCreateProject,\n    onCloseProjectContext: onCloseProjectContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }) : React.createElement(ProjectDialogButtons, {\n    onOpenProjectContext: onOpenProjectContext,\n    onCloseProjectContext: onCloseProjectContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(Text, {\n    width: \"medium\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Create, edit and merge gifs with ease. A small tool created for the coding challenge of tender frame.\")), React.createElement(Box, {\n    direction: \"row-responsive\",\n    justify: \"center\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }));\n};\n\nconst startViewMapStateToProps = state => ({\n  targetEditPage: \"/edit/\" + state.project.currentProject.name,\n  inFileDialog: state.project.inFileDialog\n});\n\nconst startViewMapDispatchToProps = dispatch => ({\n  onCreateProject(projectName) {\n    dispatch(Action.createProject(projectName));\n  },\n\n  onOpenProjectContext(contextMode) {\n    dispatch(Action.openProjectContext(contextMode));\n  },\n\n  onCloseProjectContext() {\n    dispatch(Action.closeProjectContext());\n  }\n\n});\n\nexport const StartView = connect(startViewMapStateToProps, startViewMapDispatchToProps)(StartViewComponent);","map":{"version":3,"sources":["/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/src/components/Views.js"],"names":["React","MenuBar","Timeline","PreviewWindow","ProjectExplorer","Grommet","Grid","Box","Button","Text","TextInput","Heading","Edit","Folder","Close","Link","connect","DndProvider","HTML5Backend","Action","MainView","props","name","start","end","horizonal","vertical","color","size","FileDialogButtons","targetEditPage","onCreateProject","onCloseProjectContext","_projectName","event","target","value","ProjectDialogButtons","onOpenProjectContext","StartViewComponent","inFileDialog","startViewMapStateToProps","state","project","currentProject","startViewMapDispatchToProps","dispatch","projectName","createProject","contextMode","openProjectContext","closeProjectContext","StartView"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {MenuBar} from './MenuBar'\nimport {Timeline} from './Timeline'\nimport {PreviewWindow} from './PreviewWindow'\nimport {ProjectExplorer} from './ProjectExplorer'\nimport Grommet, {\n    Grid,\n    Box,\n    Button,\n    Text,\n    TextInput,\n    Heading\n} from 'grommet'\nimport {\n    Edit,\n    Folder,\n    Close\n} from 'grommet-icons'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\n\nimport Action from '../store/actions'\n\nexport const  MainView = (props) => {\n    return (\n        <DndProvider backend={HTML5Backend}>\n\n            <Grid\n                fill=\"vertical\"\n                background=\"dark-2\"\n                rows={[\"xxsmall\", \"flex\", \"medium\"]}\n                columns={[\"60%\", \"flex\"]}\n                areas={[\n                    { name: \"MenuBar\", start: [0, 0], end: [1, 0] },\n                    { name: \"Timeline\", start: [0, 2], end: [1, 2] },\n                    { name: \"ProjectExplorer\", start: [0, 1], end: [0, 1] },\n                    { name: \"PreviewWindow\", start: [1, 1], end: [1, 1] },\n                ]}\n            >\n                <Box\n                    gridArea=\"MenuBar\"\n                    background=\"dark-1\"\n                    direction=\"row\"\n                >\n                    <MenuBar />\n                </Box>\n                <Box\n                    gridArea=\"Timeline\"\n                    background=\"dark-2\"\n                    direction=\"row\"\n                    pad={{horizonal: \"large\", vertical: \"large\"}}\n                    justify=\"center\"\n                >\n                    <Timeline />\n                </Box>\n                <Box\n                    gridArea=\"ProjectExplorer\"\n                    border={{ color: 'black', size:\"3px\"}}\n                    round=\"small\"\n                >\n                    <ProjectExplorer />\n                </Box>\n                <Box\n                    gridArea=\"PreviewWindow\"\n                    border={{ color: 'black', size:\"3px\"}}\n                    round=\"small\"\n                >\n                    <PreviewWindow />\n                </Box>\n            </Grid>\n        </DndProvider>\n    )}\n\n\nconst FileDialogButtons = ({targetEditPage, onCreateProject, onCloseProjectContext}) => {\n    var _projectName = \"\"\n\n    return (<div>\n            <Box\n                align=\"center\"\n                justify=\"center\"\n                fill={false}\n            >\n                <Heading> gifmaker </Heading>\n            </Box>\n            <Box\n                direction=\"row-responsive\"\n                align=\"center\"\n                justify=\"center\"\n                pad=\"medium\"\n                gap=\"small\"\n                fill={false}\n            >\n                <TextInput \n                    placeholder=\"type project name here\"\n                    onChange={event => _projectName = event.target.value}\n                />\n                <Link to={\"/edit\"}>\n                    <Button\n                        label=\"Create\"\n                        onClick={() => {\n                            onCreateProject(_projectName)\n\n                        }}\n                    />\n                </Link>\n                <Button\n                    icon={<Close/>}\n                    onClick={() => onCloseProjectContext()}\n                />\n            </Box></div>)\n}\n\nconst ProjectDialogButtons = ({onOpenProjectContext, onCloseProjectContext}) => {\n    return (<Box\n                direction=\"row-responsive\"\n                align=\"center\"\n                justify=\"center\"\n                pad=\"medium\"\n                gap=\"small\"\n                fill={false}\n            >\n                <Heading> gifmaker </Heading>\n                <Button\n                    icon={<Edit/>}\n                    label=\"New Project..\"\n                    onClick={() => onOpenProjectContext(\"new\")}\n                />\n                <Button\n                    icon={<Folder/>}\n                    label=\"Open..\"\n                    onClick={() => onOpenProjectContext(\"new\")}\n                />\n            </Box>)\n}\nconst StartViewComponent = ({targetEditPage, inFileDialog=false, onOpenProjectContext, onCloseProjectContext, onCreateProject}) => {\n    return (\n        <Box\n            gap=\"medium\"\n            align=\"center\"\n            justify=\"center\"\n            fill\n        >\n            <Box\n                justify=\"center\"\n                background=\"dark-1\"\n                round\n                width=\"xlarge\"\n                pad=\"large\"\n                align=\"center\"\n            >\n                {\n                    inFileDialog ? \n                    <FileDialogButtons \n                        targetEditPage={targetEditPage}\n                        onCreateProject={onCreateProject}\n                        onCloseProjectContext={onCloseProjectContext}\n                    /> :\n                    <ProjectDialogButtons \n                        onOpenProjectContext={onOpenProjectContext}\n                        onCloseProjectContext={onCloseProjectContext}\n                    />\n                }\n                <Text\n                    width=\"medium\"\n                    size=\"large\"\n                >\n                    Create, edit and merge gifs with ease.  \n                    A small tool created for the coding challenge of tender frame.\n                </Text>\n            </Box>\n            <Box\n                direction=\"row-responsive\"\n                justify=\"center\"\n                align=\"center\"\n            >\n            \n            </Box>\n        </Box>\n    )\n}\n\nconst startViewMapStateToProps = state => ({\n        targetEditPage: \"/edit/\" + state.project.currentProject.name,\n        inFileDialog: state.project.inFileDialog\n    })\n\nconst startViewMapDispatchToProps = dispatch => \n    ({\n        onCreateProject(projectName) {\n            dispatch(Action.createProject(projectName))\n        },\n        onOpenProjectContext(contextMode) {\n            dispatch(Action.openProjectContext(contextMode))\n        },\n        onCloseProjectContext() {\n            dispatch(Action.closeProjectContext())\n        }\n    })\nexport const StartView = connect(\n    startViewMapStateToProps,\n    startViewMapDispatchToProps\n)(StartViewComponent)"]},"metadata":{},"sourceType":"module"}