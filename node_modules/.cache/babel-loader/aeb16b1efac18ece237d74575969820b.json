{"ast":null,"code":"var _jsxFileName = \"/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/src/components/PreviewWindow.js\";\nimport React from 'react';\nimport { Box, Grid, Button } from 'grommet';\nimport gifFrames from 'gif-frames';\nimport { connect } from 'react-redux';\nimport { object } from 'prop-types';\nimport Action from '../store/actions';\nexport const PreviewWindowComponent = ({\n  preview,\n  timeline,\n  onUpdatePreview\n}) => {\n  return React.createElement(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    gap: \"small\",\n    background: \"dark-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Box, {\n    width: \"medium\",\n    height: \"medium\",\n    background: \"dark-3\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\"),\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Box, {\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    fill: true,\n    areas: [{\n      name: \"back\",\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: \"play\",\n      start: [1, 0],\n      end: [1, 0]\n    }, {\n      name: \"toEnd\",\n      start: [2, 0],\n      end: [2, 0]\n    }],\n    columns: [\"flex\", \"flex\", \"flex\"],\n    rows: [\"flex\"],\n    gap: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    gridArea: \"back\",\n    label: \"|<\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Button, {\n    gridArea: \"play\",\n    label: \">\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    gridArea: \"toEnd\",\n    label: \">|\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  timeline: state.timeline,\n  preview: state.project.preview\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onUpdatePreview(file) {\n    dispatch(Action.updatePreview(file));\n  }\n\n});\n\nexport const PreviewWindow = connect(mapStateToProps, mapDispatchToProps)(PreviewWindowComponent);","map":{"version":3,"sources":["/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/src/components/PreviewWindow.js"],"names":["React","Box","Grid","Button","gifFrames","connect","object","Action","PreviewWindowComponent","preview","timeline","onUpdatePreview","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","name","start","end","mapStateToProps","state","project","mapDispatchToProps","dispatch","file","updatePreview","PreviewWindow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Box, Grid, Button } from 'grommet'\nimport gifFrames from 'gif-frames'\nimport { connect } from 'react-redux'\nimport { object } from 'prop-types'\nimport Action from '../store/actions'\n\n\nexport const PreviewWindowComponent = ({preview, timeline, onUpdatePreview}) => {\n\n\n    return (\n        <Box\n            fill\n            align=\"center\"\n            justify=\"center\"\n            gap=\"small\"\n            background=\"dark-1\"\n        >\n            <Box\n                width=\"medium\"\n                height=\"medium\"\n                background=\"dark-3\"\n                style={{backgroundImage:`url(${preview})`, backgroundSize:'cover', backgroundRepeat: 'no-repeat', backgroundPosition: 'center'}}\n            >\n\n            </Box>\n            <Box\n                round\n            >\n                <Grid\n                    fill\n                    areas={\n                        [\n                            { name: \"back\", start: [0, 0], end: [0,0] },\n                            { name: \"play\", start: [1, 0], end: [1,0] },\n                            { name: \"toEnd\", start: [2, 0], end: [2,0] },\n                        ]\n                    }\n                    columns={[\"flex\", \"flex\", \"flex\"]}\n                    rows={[\"flex\"]}\n                    gap=\"small\"\n                >\n                    <Button gridArea=\"back\" label=\"|<\"/>\n                    <Button gridArea=\"play\" label=\">\" primary/>\n                    <Button gridArea=\"toEnd\" label=\">|\"/>\n\n                </Grid>\n            </Box>\n        </Box>\n    )\n}\n\nconst mapStateToProps = state => ({\n        timeline: state.timeline,\n        preview: state.project.preview\n    })\n\nconst mapDispatchToProps = dispatch => ({\n        onUpdatePreview(file) {\n            dispatch(Action.updatePreview(file))\n        }\n    })\n\nexport const PreviewWindow = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PreviewWindowComponent)"]},"metadata":{},"sourceType":"module"}