{"ast":null,"code":"import _defineProperty from \"/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers } from 'redux';\nimport C from './constants';\n\nconst editProject = (state, action) => {\n  switch (action.type) {\n    case C.CREATE_NEW_PROJECT:\n      return _objectSpread({}, state, {\n        name: action.projectName,\n        importedFiles: []\n      });\n\n    case C.IMPORT_FILES:\n      return _objectSpread({}, state, {\n        importedFiles: [...state.importedFiles, action.files.map(file => ({\n          file,\n          url: URL.createObjectURL(file)\n        }))]\n      });\n\n    default:\n      return state == {} ? {\n        name: \"\",\n        importedFiles: []\n      } : state;\n  }\n};\n\nconst timeline = (state, action) => {\n  switch (action.type) {\n    case C.INSERT_SHOT:\n      var newState = [...state];\n      newState.splice(action.position, 0, {\n        shot: action.file\n      });\n      return newState;\n\n    default:\n      return state == null ? [] : state;\n  }\n};\n\nconst createProject = (state, action) => {\n  switch (action.type) {\n    case C.OPEN_PROJECT_DIALOG:\n      return Object.assign({}, state, {\n        inFileDialog: true\n      });\n\n    case C.CLOSE_PROJECT_DIALOG:\n      return Object.assign({}, state, {\n        inFileDialog: false\n      });\n\n    case C.CREATE_NEW_PROJECT:\n      return _objectSpread({}, state, {\n        currentProject: editProject(state.currentProject, action)\n      });\n\n    default:\n      return state == {} ? _objectSpread({}, state, {\n        currentProject: editProject(state.currentProject, action)\n      }) : state;\n  }\n};\n\nconst project = (state, action) => {\n  switch (action.type) {\n    case C.OPEN_PROJECT_DIALOG:\n      return Object.assign({}, state, {\n        inFileDialog: true\n      });\n\n    case C.CLOSE_PROJECT_DIALOG:\n      return Object.assign({}, state, {\n        inFileDialog: false\n      });\n\n    case C.CREATE_NEW_PROJECT:\n      return _objectSpread({}, state, {}, createProject(state, action));\n\n    case C.IMPORT_FILES:\n      return _objectSpread({}, state, {\n        currentProject: editProject(state.currentProject, action)\n      });\n\n    case C.UPDATE_PREVIEW:\n      return _objectSpread({}, state, {\n        preview: action.file\n      });\n\n    default:\n      return state == null ? {\n        inFileDialog: false,\n        currentProject: {\n          name: \"undefined\",\n          importedFiles: []\n        }\n      } : state;\n  }\n};\n\nexport const mainReducer = combineReducers({\n  project,\n  timeline\n});","map":{"version":3,"sources":["/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/src/store/reducers.js"],"names":["createStore","combineReducers","C","editProject","state","action","type","CREATE_NEW_PROJECT","name","projectName","importedFiles","IMPORT_FILES","files","map","file","url","URL","createObjectURL","timeline","INSERT_SHOT","newState","splice","position","shot","createProject","OPEN_PROJECT_DIALOG","Object","assign","inFileDialog","CLOSE_PROJECT_DIALOG","currentProject","project","UPDATE_PREVIEW","preview","mainReducer"],"mappings":"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","sourcesContent":["import { createStore, combineReducers } from 'redux'\nimport C from './constants'\n\nconst editProject = (state, action) => {\n    switch(action.type) {\n        case C.CREATE_NEW_PROJECT:\n            return {...state,\n                    name: action.projectName,\n                    importedFiles: []\n                }\n        case C.IMPORT_FILES:\n            return {...state,\n                    importedFiles: [...state.importedFiles, \n                        action.files.map((file) => ({\n                            file,\n                            url: URL.createObjectURL(file)\n                        }))]\n                }\n        default:\n            return state == {} ?\n                { name: \"\", importedFiles: [] } :\n                state\n    }\n}\n\nconst timeline = (state, action) => {\n    switch(action.type) {\n        case C.INSERT_SHOT:\n            var newState = [...state]\n            newState.splice(action.position, 0, { shot: action.file})\n            return newState\n\n        default:\n            return state == null ? \n                [] : \n                state\n    }\n}\n\nconst createProject = (state, action) => {\n    switch(action.type) {\n        case C.OPEN_PROJECT_DIALOG:\n            return Object.assign({}, state, {\n                inFileDialog: true\n            })\n        case C.CLOSE_PROJECT_DIALOG:\n            return Object.assign({}, state, {\n                inFileDialog: false\n            })\n        case C.CREATE_NEW_PROJECT:\n            return {...state, currentProject: editProject(state.currentProject, action)} \n        default:\n            return state == {} ?\n                {...state, currentProject: editProject(state.currentProject, action)} :\n                state\n    }\n}\n\nconst project = (state, action) => {\n    switch(action.type) {\n        case C.OPEN_PROJECT_DIALOG:\n            return Object.assign({}, state, {\n                inFileDialog: true\n            })\n        case C.CLOSE_PROJECT_DIALOG:\n            return Object.assign({}, state, {\n                inFileDialog: false\n            })\n        case C.CREATE_NEW_PROJECT:\n            return {...state,\n                ...createProject(state, action)\n            }\n        case C.IMPORT_FILES:\n            return {...state, currentProject: editProject(state.currentProject, action)}\n        case C.UPDATE_PREVIEW:\n            return { ...state, preview: action.file }\n        default:\n            return state == null ? \n            {inFileDialog: false, currentProject: {name:\"undefined\", importedFiles: []}} : \n            state\n    }\n}\nexport const mainReducer = combineReducers({project, timeline})\n"]},"metadata":{},"sourceType":"module"}