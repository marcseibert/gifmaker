{"ast":null,"code":"var _jsxFileName = \"/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/src/components/MenuBar.js\";\nimport React from 'react';\nimport { Box, Menu, Text } from 'grommet';\nimport { connect } from 'react-redux';\n\nconst MenuBarComponent = ({\n  projectName = \"undefined\"\n}) => {\n  return React.createElement(Box, {\n    fill: true,\n    background: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(Box, {\n    direction: \"row-responsive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Box, {\n    direction: \"row-responsive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    label: \"File\",\n    items: [{\n      label: 'New Project',\n      onClick: f => f\n    }, {\n      label: 'Open Project',\n      onClick: f => f\n    }, {\n      label: 'Save Project',\n      onClick: f => f\n    }, {\n      label: 'Export GIF..',\n      onClick: f => f\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Menu, {\n    label: \"Edit\",\n    items: [{\n      label: 'Undo',\n      onClick: f => f\n    }, {\n      label: 'Redo',\n      onClick: f => f\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(Box, {\n    align: \"center\",\n    justify: \"center\",\n    fill: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Text, {\n    style: {\n      margin: \"auto\"\n    },\n    weight: \"bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, projectName))));\n};\n\nconst menuBarMapStateToProps = state => ({\n  projectName: state.project.currentProject.name\n});\n\nconst menuBarMapDispatchToProps = dispatch => ({});\n\nexport const MenuBar = connect(menuBarMapStateToProps, menuBarMapDispatchToProps)(MenuBarComponent);","map":{"version":3,"sources":["/Users/marcseibert/Documents/Development/web/coding-challenge-react/gifmaker/src/components/MenuBar.js"],"names":["React","Box","Menu","Text","connect","MenuBarComponent","projectName","label","onClick","f","margin","menuBarMapStateToProps","state","project","currentProject","name","menuBarMapDispatchToProps","dispatch","MenuBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,QAAgC,SAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,WAAW,GAAC;AAAb,CAAD,KAA+B;AACpD,SACI,oBAAC,GAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,UAAU,EAAC,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,GAAD;AACI,IAAA,SAAS,EAAC,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,GAAD;AACI,IAAA,SAAS,EAAC,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AACI,IAAA,KAAK,EAAE,CACH;AAAEC,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,OAAO,EAAEC,CAAC,IAAIA;AAAtC,KADG,EAEH;AAAEF,MAAAA,KAAK,EAAE,cAAT;AAAyBC,MAAAA,OAAO,EAAEC,CAAC,IAAIA;AAAvC,KAFG,EAGH;AAAEF,MAAAA,KAAK,EAAE,cAAT;AAAyBC,MAAAA,OAAO,EAAEC,CAAC,IAAIA;AAAvC,KAHG,EAIH;AAAEF,MAAAA,KAAK,EAAE,cAAT;AAAyBC,MAAAA,OAAO,EAAEC,CAAC,IAAIA;AAAvC,KAJG,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAYI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAC,MADV;AAEI,IAAA,KAAK,EAAE,CACH;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAEC,CAAC,IAAIA;AAA/B,KADG,EAEH;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAEC,CAAC,IAAIA;AAA/B,KAFG,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAHJ,EAuBI,oBAAC,GAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAC,QAFZ;AAGI,IAAA,IAAI,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KADX;AAEI,IAAA,MAAM,EAAC,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKJ,WAJL,CALJ,CAvBJ,CAJJ,CADJ;AA4CC,CA7CL;;AA+CI,MAAMK,sBAAsB,GAAGC,KAAK,KAAK;AACjCN,EAAAA,WAAW,EAAEM,KAAK,CAACC,OAAN,CAAcC,cAAd,CAA6BC;AADT,CAAL,CAApC;;AAIA,MAAMC,yBAAyB,GAAGC,QAAQ,KAAK,EAAL,CAA1C;;AAGA,OAAO,MAAMC,OAAO,GAAGd,OAAO,CAC1BO,sBAD0B,EAE1BK,yBAF0B,CAAP,CAGrBX,gBAHqB,CAAhB","sourcesContent":["import React from 'react'\nimport { Box, Menu, Text } from 'grommet'\nimport { connect } from 'react-redux'\nconst MenuBarComponent = ({projectName=\"undefined\"}) => {\n    return (\n        <Box\n            fill\n            background=\"dark\"\n        >\n            <Box \n                direction=\"row-responsive\"\n            >\n                <Box\n                    direction=\"row-responsive\"\n                >\n                    <Menu label=\"File\"\n                        items={[\n                            { label: 'New Project', onClick: f => f},\n                            { label: 'Open Project', onClick: f => f},\n                            { label: 'Save Project', onClick: f => f},\n                            { label: 'Export GIF..', onClick: f => f},\n                        ]}\n\n                    />\n                    <Menu\n                        label=\"Edit\"\n                        items={[\n                            { label: 'Undo', onClick: f => f},\n                            { label: 'Redo', onClick: f => f},\n                        ]}\n                    />\n                </Box>\n                <Box\n                    align=\"center\"\n                    justify=\"center\"\n                    fill\n                >\n                    <Text\n                        style={{margin:\"auto\"}}\n                        weight=\"bold\"\n                    >\n                        {projectName}\n                    </Text>\n\n                </Box>\n                </Box>\n            </Box>\n        )\n    }\n\n    const menuBarMapStateToProps = state => ({\n            projectName: state.project.currentProject.name\n        })\n\n    const menuBarMapDispatchToProps = dispatch => ({\n\n        })\n    export const MenuBar = connect(\n        menuBarMapStateToProps,\n        menuBarMapDispatchToProps\n    )(MenuBarComponent)\n"]},"metadata":{},"sourceType":"module"}